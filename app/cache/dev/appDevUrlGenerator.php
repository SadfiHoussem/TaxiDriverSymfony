<?php

use Symfony\Component\Routing\RequestContext;
use Symfony\Component\Routing\Exception\RouteNotFoundException;
use Psr\Log\LoggerInterface;

/**
 * appDevUrlGenerator
 *
 * This class has been auto-generated
 * by the Symfony Routing Component.
 */
class appDevUrlGenerator extends Symfony\Component\Routing\Generator\UrlGenerator
{
    static private $declaredRoutes = array(
        '_wdt' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:toolbarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_wdt',    ),  ),  4 =>   array (  ),),
        '_profiler_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:homeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/',    ),  ),  4 =>   array (  ),),
        '_profiler_search' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search',    ),  ),  4 =>   array (  ),),
        '_profiler_search_bar' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchBarAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/search_bar',    ),  ),  4 =>   array (  ),),
        '_profiler_purge' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:purgeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/purge',    ),  ),  4 =>   array (  ),),
        '_profiler_info' => array (  0 =>   array (    0 => 'about',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:infoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'about',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler/info',    ),  ),  4 =>   array (  ),),
        '_profiler_import' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:importAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/import',    ),  ),  4 =>   array (  ),),
        '_profiler_export' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:exportAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '.txt',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/\\.]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler/export',    ),  ),  4 =>   array (  ),),
        '_profiler_phpinfo' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:phpinfoAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_profiler/phpinfo',    ),  ),  4 =>   array (  ),),
        '_profiler_search_results' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:searchResultsAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/search/results',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.profiler:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_router' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.router:panelAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/router',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_profiler_exception_css' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'web_profiler.controller.exception:cssAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/exception.css',    ),    1 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    2 =>     array (      0 => 'text',      1 => '/_profiler',    ),  ),  4 =>   array (  ),),
        '_configurator_home' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::checkAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/',    ),  ),  4 =>   array (  ),),
        '_configurator_step' => array (  0 =>   array (    0 => 'index',  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::stepAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'index',    ),    1 =>     array (      0 => 'text',      1 => '/_configurator/step',    ),  ),  4 =>   array (  ),),
        '_configurator_final' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Sensio\\Bundle\\DistributionBundle\\Controller\\ConfiguratorController::finalAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/_configurator/final',    ),  ),  4 =>   array (  ),),
        'fos_user_security_login' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::loginAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login',    ),  ),  4 =>   array (  ),),
        'fos_user_security_check' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::checkAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/login_check',    ),  ),  4 =>   array (  ),),
        'fos_user_security_logout' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\SecurityController::logoutAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/logout',    ),  ),  4 =>   array (  ),),
        'fos_user_profile_show' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::showAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/show',    ),  ),  4 =>   array (  ),),
        'fos_user_profile_edit' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ProfileController::editAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/edit',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_register' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::registerAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/check-email',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_confirm' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/register/confirm',    ),  ),  4 =>   array (  ),),
        'fos_user_registration_confirmed' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\RegistrationController::confirmedAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/register/confirmed',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_request' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::requestAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/request',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_send_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::sendEmailAction',  ),  2 =>   array (    '_method' => 'POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/send-email',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_check_email' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::checkEmailAction',  ),  2 =>   array (    '_method' => 'GET',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/resetting/check-email',    ),  ),  4 =>   array (  ),),
        'fos_user_resetting_reset' => array (  0 =>   array (    0 => 'token',  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ResettingController::resetAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'token',    ),    1 =>     array (      0 => 'text',      1 => '/resetting/reset',    ),  ),  4 =>   array (  ),),
        'fos_user_change_password' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'FOS\\UserBundle\\Controller\\ChangePasswordController::changePasswordAction',  ),  2 =>   array (    '_method' => 'GET|POST',  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/profile/change-password',    ),  ),  4 =>   array (  ),),
        '_welcome' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\WelcomeController::indexAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_client_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\DefaultController::accueilClientAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/accueil',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\DefaultController::accueilRespAgenceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/accueil',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_chauffeur_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\DefaultController::accueilChauffeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/chauffeur/accueil',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_admin_homepage' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\DefaultController::accueilAdminAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/admin/accueil',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_a_propos' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\DefaultController::aproposAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/apropos',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_contact' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\DefaultController::contactAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/contact',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_affi_agence' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\AgenceController::affAgenceAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/agence',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_affi_offre' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\OffreController::affOffreAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/offre',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_affi_chauffeur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ChauffeurController::affChauffeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/chauffeur',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_affi_vehicule' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\VoitureController::affVehiculeAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/voiture',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_client_reservation_taxi' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ReservationController::reserverAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/resTaxi',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_client_consul_conf_res' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ReservationController::consulterConfResAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/client/consulConfRes',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_listRNCreclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ReclamationController::listRecNonConfAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/listreclamationNC',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_listReclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ReclamationController::listReclamationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/listReclamation',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_AffichReclamation' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ReclamationController::AffichReclamationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/AffichReclamation',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_affichageRec' => array (  0 =>   array (    0 => 'idreclamation',  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ReclamationController::affichageAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idreclamation',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/affichageRec',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_historiqueRec' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ReclamationController::historiqueAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/historique',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_confirmationRec' => array (  0 =>   array (    0 => 'idreclamation',  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ReclamationController::confirmationAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idreclamation',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/confirmation',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_affichagehistRec' => array (  0 =>   array (    0 => 'idreclamation',  ),  1 =>   array (  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idreclamation',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/affichagehist',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_listChauffeur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ChauffeurController::listChauffeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/listChauffeur',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_updateChauffeur' => array (  0 =>   array (    0 => 'idchauffeur',  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ChauffeurController::updateChauffeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idchauffeur',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/updateChauffeur',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_deleteChauffeur' => array (  0 =>   array (    0 => 'idchauffeur',  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ChauffeurController::deleteChauffeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idchauffeur',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/deleteChauffeur',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_ajoutChauffeur' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\ChauffeurController::ajoutChauffeurAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/ajoutChauffeur',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_listVoiture' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\VoitureController::listVoitureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/listVoiture',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_updateVoiture' => array (  0 =>   array (    0 => 'matricule',  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\VoitureController::updateVoitureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'matricule',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/updateVoiture',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_deleteVoiture' => array (  0 =>   array (    0 => 'matricule',  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\VoitureController::deleteVoitureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'matricule',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/deleteVoiture',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_ajoutVoiture' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\VoitureController::ajoutVoitureAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/ajoutVoiture',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_listTrajet' => array (  0 =>   array (  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\TrajetController::listTrajetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'text',      1 => '/respAgence/trajet',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_confirmationtrajet' => array (  0 =>   array (    0 => 'idtrajet',  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\TrajetController::confirmationtrajetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idtrajet',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/confirmationtrajet',    ),  ),  4 =>   array (  ),),
        'esprit_taxidriver_resp_agence_deleteTrajet' => array (  0 =>   array (    0 => 'idtrajet',  ),  1 =>   array (    '_controller' => 'Esprit\\TaxiDriverBundle\\Controller\\TrajetController::deleteTrajetAction',  ),  2 =>   array (  ),  3 =>   array (    0 =>     array (      0 => 'variable',      1 => '/',      2 => '[^/]++',      3 => 'idtrajet',    ),    1 =>     array (      0 => 'text',      1 => '/respAgence/deleteTrajet',    ),  ),  4 =>   array (  ),),
    );

    /**
     * Constructor.
     */
    public function __construct(RequestContext $context, LoggerInterface $logger = null)
    {
        $this->context = $context;
        $this->logger = $logger;
    }

    public function generate($name, $parameters = array(), $referenceType = self::ABSOLUTE_PATH)
    {
        if (!isset(self::$declaredRoutes[$name])) {
            throw new RouteNotFoundException(sprintf('Unable to generate a URL for the named route "%s" as such route does not exist.', $name));
        }

        list($variables, $defaults, $requirements, $tokens, $hostTokens) = self::$declaredRoutes[$name];

        return $this->doGenerate($variables, $defaults, $requirements, $tokens, $parameters, $name, $referenceType, $hostTokens);
    }
}
